import argparse
from attacks.scanOpenPorts import scanPorts
from attacks.SQLI import sqli
from attacks.XSS import xss
from attacks.WC import web_crawl
from attacks.DS import run_dirsearch
from attacks.firewall_detection import get_firewall
import requests
import asyncio


if __name__ == '__main__':
	parser = argparse.ArgumentParser(description='Vulnerability Detection and Assessment Tool')
	parser.add_argument('url', type=str, help='URL to investigate')
	parser.add_argument('-s', '--sql-inject', action='store_true', help='Perform SQL injection attack')
	parser.add_argument('-x', '--xss', action='store_true', help='Perform cross-site scripting attack')
	parser.add_argument('-wc', '--web-crawl', action='store_true', help='Perform web crawling attack')
	parser.add_argument('-rwc', '--rec-web-crawl', action='store_true', help='Perform recursive web crawling attack')
	parser.add_argument('-d', '--dir-enum', action='store_true', help='Perform directory enumeration attack')
	parser.add_argument('-f', '--fire-det', action='store_true', help='Perform firewall detection')
	parser.add_argument('-p', '--scan-ports', action='store_true', help='Scan open ports')

	input = parser.parse_args()
	url = input.url
	
	if not any([input.sql_inject, input.xss, input.rec_web_crawl, input.web_crawl, input.dir_enum, input.fire_det, input.scan_ports]):
		print('No option selected. Use -h or --help for usage information.')

	if input.sql_inject:
		try:
			sqli(url)
		except requests.exceptions.ConnectTimeout:
			print('The site you are trying to connect right now is unavailable. Check the site again or try again later.')

	if input.xss:
		try:
			xss(url)
		except requests.exceptions.ConnectTimeout:
			print('The site you are trying to connect right now is unavailable. Check the site again or try again later.')
	
	if input.rec_web_crawl:
		try:
			asyncio.run(web_crawl(url, True))
		except requests.exceptions.ConnectTimeout:
			print('The site you are trying to connect right now is unavailable. Check the site again or try again later.')
	
	if input.web_crawl:
		try:
			asyncio.run(web_crawl(url, False))
		except requests.exceptions.ConnectTimeout:
			print('The site you are trying to connect right now is unavailable. Check the site again or try again later.')

	if input.dir_enum:
		try:
			print(run_dirsearch(url))
		except requests.exceptions.ConnectTimeout:
			print('The site you are trying to connect right now is unavailable. Check the site again or try again later.')

	if input.fire_det:
		try:
			print(get_firewall(url, False))
		except requests.exceptions.ConnectTimeout:
			print('The site you are trying to connect right now is unavailable. Check the site again or try again later.')

	if input.scan_ports:
		print(scanPorts(url))
